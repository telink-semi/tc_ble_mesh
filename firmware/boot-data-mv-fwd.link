/********************************************************************************************************
 * @file	boot-data-mv-fwd.link
 *
 * @brief	This is the link file for BLE SDK
 *
 * @author	telink
 * @date	2017
 *
 * @par     Copyright (c) 2017, Telink Semiconductor (Shanghai) Co., Ltd. ("TELINK")
 *          All rights reserved.
 *
 *          Licensed under the Apache License, Version 2.0 (the "License");
 *          you may not use this file except in compliance with the License.
 *          You may obtain a copy of the License at
 *
 *              http://www.apache.org/licenses/LICENSE-2.0
 *
 *          Unless required by applicable law or agreed to in writing, software
 *          distributed under the License is distributed on an "AS IS" BASIS,
 *          WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *          See the License for the specific language governing permissions and
 *          limitations under the License.
 *
 *******************************************************************************************************/

/* to tell the linker the program begin from __start label in cstartup.s, thus do not treat it as a unused symbol */
ENTRY(__start)

SECTIONS
{
	. = 0x0;
        .vectors :
        {
        *(.vectors)
        *(.vectors.*)	/* MUST as follows, when compile with -ffunction-sections -fdata-sections, session name may changed */
        }
        .ram_code :
        {
        *(.ram_code)
        *(.ram_code.*)
        }
	. = (((. + 3) / 4)*4);
	PROVIDE(_dstored_ = .);
	. = . + 0x808000 ;
        .data :
          AT (  _dstored_ )
         {
	. = (((. + 3) / 4)*4);
         PROVIDE(_start_data_ = . );
         *(.data); 
         *(.data.*); 
         PROVIDE(_end_data_ = . );  
         PROVIDE(_end_data16_ = (. - 0x808000 + 15));
         }
	. = . - 0x808000 ;
	PROVIDE(_ramcode_size_ = . );
	. = (((. + 3) / 4)*4);
        .text :
        {
        *(.text)
        *(.text.*)
        }
        .rodata :
        {
        *(.rodata)
        *(.rodata.*)
        }
	PROVIDE(_bss_dstored_ = .);
	. = . + 0x808000 ;
        .bss :
          AT (  _bss_dstored_ )
        {
	. = (((. + 3) / 4)*4);
	PROVIDE(_start_bss_ = .);
        *(.sbss)
        *(.sbss.*)
        *(.bss)
        *(.bss.*)
        }
	PROVIDE(_end_bss_ = .);
	
}
